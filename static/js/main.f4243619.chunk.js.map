{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","currentPage","handlePrevPage","handleNextPage","handlePageChange","totalPages","className","href","onClick","Array","from","length","_","index","map","item","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","startItem","lastItem","visibleItems","slice","Math","ceil","id","onChange","event","newValue","target","value","htmlFor","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"2MASaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,WAEA,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBL,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAASN,EALX,oBAWDO,MAAMC,KAAK,CAAEC,OAAQN,IAAc,SAACO,EAAGC,GAAJ,OAClC,oBAAgBP,UAAS,oBAAeL,IAAgBY,EAAQ,EAAI,SAAW,IAA/E,SACE,mBACE,UAAQ,WACRP,UAAU,YACVC,KAAI,WAAMM,EAAQ,GAClBL,QAAS,kBAAMJ,EAAiBS,EAAQ,IAJ1C,SAMGA,EAAQ,KAPJA,MAYX,oBAAIP,UAAS,oBAAeL,IAAgBI,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBI,EAC/BG,QAASL,EALX,uBAWJ,6BACGH,EAAMc,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrD5Bf,ECNC,SAAoBU,EAAcM,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIR,EAAMQ,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBN,KAAI,SAAAI,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBwB,EAApB,KASMC,GAAazB,EAAc,GAAKsB,EAChCI,EAAYD,EAAYH,EAAgBvB,EAAMW,OAChDX,EAAMW,OAASe,EAAYH,EACzBK,EAAe,YAAI5B,GAAO6B,MAAMH,EAAWC,GAE3CtB,EAAayB,KAAKC,KAAK/B,EAAMW,OAASY,GAkB5C,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCyB,EAAY,EAD7C,cACoDC,EADpD,eACmE3B,EAAMW,OADzE,OAIA,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SA5CS,SAACC,GAClB,IAAMC,GAAYD,EAAME,OAAOC,MAE/Bb,EAAgBW,GAChBV,EAAe,IAyCPY,MAAOd,EALT,UAOE,wBAAQc,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEN,MAAO4B,EACP3B,YAAaA,EACbC,eA/CiB,WACjBD,EAAc,GAChBwB,EAAexB,EAAc,IA8C3BE,eA1CiB,WACjBF,EAAcI,GAChBoB,EAAexB,EAAc,IAyC3BG,iBArCmB,SAACmC,GACxBd,EAAec,IAqCXlC,WAAYA,QE1EpBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f4243619.chunk.js","sourcesContent":["interface Props {\n  items: string[],\n  currentPage: number,\n  handlePrevPage: () => void,\n  handleNextPage: () => void,\n  handlePageChange: (pageNumber: number) => void,\n  totalPages: number,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  currentPage,\n  handlePrevPage,\n  handleNextPage,\n  handlePageChange,\n  totalPages,\n}) => {\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {Array.from({ length: totalPages }, (_, index) => (\n          <li key={index} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${index + 1}`}\n              onClick={() => handlePageChange(index + 1)}\n            >\n              {index + 1}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item: string) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const setPerPage = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const newValue = +event.target.value;\n\n    setItemsPerPage(newValue);\n    setCurrentPage(1);\n  };\n\n  const startItem = (currentPage - 1) * itemsPerPage;\n  const lastItem = (startItem + itemsPerPage) > items.length\n    ? items.length : startItem + itemsPerPage;\n  const visibleItems = [...items].slice(startItem, lastItem);\n\n  const totalPages = Math.ceil(items.length / itemsPerPage);\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={setPerPage}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        items={visibleItems}\n        currentPage={currentPage}\n        handlePrevPage={handlePrevPage}\n        handleNextPage={handleNextPage}\n        handlePageChange={handlePageChange}\n        totalPages={totalPages}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}