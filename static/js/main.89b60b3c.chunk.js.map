{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pagesArray","Array","from","length","_","index","className","cn","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","selectOptions","App","useState","setPerPage","setCurrentPage","startItem","lastItem","visibleItems","slice","id","onChange","event","newValue","target","value","opt","htmlFor","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAaC,MAAMC,KACvB,CAAEC,OAAQN,IAAY,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAG9C,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IAA3C,SACE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAed,GAAe,EAC9Be,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,oBAUDK,EAAWW,KAAI,SAACC,GACf,OACE,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASjB,IAFhD,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMd,EAAagB,IAJ9B,SAMGA,KATEA,MAcX,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUb,GAAeE,IAD1C,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,wBClDFmB,ECLC,SAAoBZ,EAAca,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIf,EAAMe,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,OAAIA,KAENG,EAAgB,CAAC,EAAG,EAAG,GAAI,IAEpBC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB6B,EAApB,KASMC,GAAa9B,EAAc,GAAKD,EAChCgC,EAAYD,EAAY/B,EAAWoB,EAAMX,OAC3CW,EAAMX,OAASsB,EAAY/B,EAEzBiC,EAAe,YAAIb,GAAOc,MAAMH,EAAWC,GAYjD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC8B,EAAY,EAD7C,cACoDC,EADpD,eACmEZ,EAAMX,OADzE,OAIA,sBAAKG,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SArCc,SAACC,GACvB,IAAMC,GAAYD,EAAME,OAAOC,MAE/BX,EAAWS,GACXR,EAAe,IAkCPU,MAAOxC,EALT,SAQI0B,EAAcT,KAAI,SAAAwB,GAAG,OAAI,wBAAQD,MAAOC,EAAf,SAAqBA,WAKpD,uBAAOC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEb,MAAOqB,EAAMX,OACbT,QAASA,EACTC,YAAaA,EACbC,aAzCU,SAACyC,GAEbA,GAAW,GACRA,GAAWvC,KAAKC,KAAKe,EAAMX,OAAST,IACpC2C,IAAY1C,GAEf6B,EAAea,MAqCf,6BAEIV,EACGhB,KAAI,SAAA2B,GAAI,OAAI,oBAAe,UAAQ,OAAvB,wBAAuCA,IAA9BA,YEtElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.89b60b3c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (n: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pagesArray = Array.from(\n    { length: lastPage }, (_, index) => index + 1,\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage <= 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pagesArray.map((page) => {\n        return (\n          <li\n            key={page}\n            className={cn('page-item', { active: page === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li className={cn(\n        'page-item', { disabled: currentPage >= lastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => n);\n\nconst selectOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const setPerPageCount = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const newValue = +event.target.value;\n\n    setPerPage(newValue);\n    setCurrentPage(1);\n  };\n\n  const startItem = (currentPage - 1) * perPage;\n  const lastItem = (startItem + perPage) > items.length\n    ? items.length : startItem + perPage;\n\n  const visibleItems = [...items].slice(startItem, lastItem);\n\n  const setPage = (newPage: number) => {\n    if (\n      newPage >= 1\n      && newPage <= Math.ceil(items.length / perPage)\n      && newPage !== currentPage\n    ) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={setPerPageCount}\n            value={perPage}\n          >\n            {\n              selectOptions.map(opt => <option value={opt}>{opt}</option>)\n            }\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setPage}\n      />\n      <ul>\n        {\n          visibleItems\n            .map(item => <li key={item} data-cy=\"item\">{`Item ${item}`}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}